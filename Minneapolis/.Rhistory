owner_size<-mpls_rentals_henn_parcels%>%
dplyr::select(pid,tax_address_full,owner_name,applicant) #need to finish filling these out
#there are some points that won't join so we'll add them on to the data set
owner_size<-mpls_rentals_henn_parcels%>%
dplyr::select(pid,tax_address_full,owner_nm,taxpayer_nm)%>%
mutate(units = ifelse(is.na(licensed_units),1,licensed_units))
#there are some points that won't join so we'll add them on to the data set
owner_size<-mpls_rentals_henn_parcels%>%
dplyr::select(pid,tax_address_full,owner_nm,taxpayer_nm)%>%
mutate(units = ifelse(is.na(licensed_units),1,licensed_units))
#there are some points that won't join so we'll add them on to the data set
owner_size<-mpls_rentals_henn_parcels%>%
dplyr::select(pid,tax_address_full,owner_nm,taxpayer_nm,licensed_units)%>%
mutate(units = ifelse(is.na(licensed_units),1,licensed_units))
owner_size<-owner_size%>%
mutate(tax_address_full = ifelse(is.na(tax_address_full)|tax_address_full=="","no tax add",tax_address_full),
owner_nm = ifelse(is.na(owner_nm)|owner_nm=="", "no owner name", owner_nm),
taxpayer_nm = ifelse(is.na(taxpayer_nm)|taxpayer_nm =="", "no tax name", taxpayer_nm))%>%
group_by(f_address)%>%
mutate(tot_props_owned_by_taxpayer_add = sum(n()))%>%
group_by(owner_name)%>%
mutate(tot_props_owned_by_owner_name = sum(n()))%>%
group_by(taxpayer_nm)%>%
mutate(tot_props_owned_by_taxpayer_nm = sum(n()))
owner_size<-owner_size%>%
mutate(tax_address_full = ifelse(is.na(tax_address_full)|tax_address_full=="","no tax add",tax_address_full),
owner_nm = ifelse(is.na(owner_nm)|owner_nm=="", "no owner name", owner_nm),
taxpayer_nm = ifelse(is.na(taxpayer_nm)|taxpayer_nm =="", "no tax name", taxpayer_nm))%>%
group_by(tax_address_full)%>%
mutate(tot_props_owned_by_taxpayer_add = sum(n()))%>%
group_by(owner_nm)%>%
mutate(tot_props_owned_by_owner_name = sum(n()))%>%
group_by(taxpayer_nm)%>%
mutate(tot_props_owned_by_taxpayer_nm = sum(n()))
View(owner_size)
mutate(tot_units_owned_by_taxpayer_add = sum(units))%>%
#there are some points that won't join so we'll add them on to the data set
owner_size<-mpls_rentals_henn_parcels%>%
dplyr::select(pid,tax_address_full,owner_nm,taxpayer_nm,licensed_units)%>%
mutate(units = ifelse(is.na(licensed_units),1,licensed_units))
#there are some points that won't join so we'll add them on to the data set
owner_size<-mpls_rentals_henn_parcels%>%
dplyr::select(pid,tax_address_full,owner_nm,taxpayer_nm,licensed_units)%>%
mutate(units = ifelse(is.na(licensed_units),1,licensed_units))
owner_size<-owner_size%>%
mutate(tax_address_full = ifelse(is.na(tax_address_full)|tax_address_full=="","no tax add",tax_address_full),
owner_nm = ifelse(is.na(owner_nm)|owner_nm=="", "no owner name", owner_nm),
taxpayer_nm = ifelse(is.na(taxpayer_nm)|taxpayer_nm =="", "no tax name", taxpayer_nm))%>%
group_by(tax_address_full)%>%
mutate(tot_props_owned_by_taxpayer_add = sum(n()))%>%
group_by(tax_address_full)%>%
mutate(tot_units_owned_by_taxpayer_add = sum(units))
group_by(owner_nm)%>%
mutate(tot_props_owned_by_owner_name = sum(n()),
tot_units_owned_by_owner_name = sum(units))%>%
group_by(taxpayer_nm)%>%
mutate(tot_props_owned_by_taxpayer_nm = sum(n()),
tot_units_owned_by_taxpayer_nm = sum(units))
owner_size<-owner_size%>%
mutate(tax_address_full = ifelse(is.na(tax_address_full)|tax_address_full=="","no tax add",tax_address_full),
owner_nm = ifelse(is.na(owner_nm)|owner_nm=="", "no owner name", owner_nm),
taxpayer_nm = ifelse(is.na(taxpayer_nm)|taxpayer_nm =="", "no tax name", taxpayer_nm))%>%
group_by(tax_address_full)%>%
mutate(tot_props_owned_by_taxpayer_add = sum(n()))%>%
group_by(tax_address_full)%>%
mutate(tot_units_owned_by_taxpayer_add = sum(units))
group_by(owner_nm)%>%
mutate(tot_props_owned_by_owner_name = sum(n()),
tot_units_owned_by_owner_name = sum(units))%>%
group_by(taxpayer_nm)%>%
mutate(tot_props_owned_by_taxpayer_nm = sum(n()),
tot_units_owned_by_taxpayer_nm = sum(units))
owner_size<-owner_size%>%
mutate(tax_address_full = ifelse(is.na(tax_address_full)|tax_address_full=="","no tax add",tax_address_full),
owner_nm = ifelse(is.na(owner_nm)|owner_nm=="", "no owner name", owner_nm),
taxpayer_nm = ifelse(is.na(taxpayer_nm)|taxpayer_nm =="", "no tax name", taxpayer_nm))%>%
group_by(tax_address_full)%>%
mutate(tot_props_owned_by_taxpayer_add = sum(n()))%>%
group_by(tax_address_full)%>%
mutate(tot_units_owned_by_taxpayer_add = sum(units))%>%
group_by(owner_nm)%>%
mutate(tot_props_owned_by_owner_name = sum(n()),
tot_units_owned_by_owner_name = sum(units))%>%
group_by(taxpayer_nm)%>%
mutate(tot_props_owned_by_taxpayer_nm = sum(n()),
tot_units_owned_by_taxpayer_nm = sum(units))
owner_size_save<-owner_size
mutate(max_props = max(tot_units_owned_by_taxpayer_add,tot_units_owned_by_owner_name,tot_units_owned_by_taxpayer_nm))
owner_size<-owner_size%>%
mutate(max_props = max(tot_units_owned_by_taxpayer_add,tot_units_owned_by_owner_name,tot_units_owned_by_taxpayer_nm))
owner_size<-owner_size%>%
mutate(max_units = max(tot_units_owned_by_taxpayer_add,tot_units_owned_by_owner_name,tot_units_owned_by_taxpayer_nm),
max_props = max(tot_props_owned_by_owner_name, tot_props_owned_by_taxpayer_add, tot_props_owned_by_taxpayer_nm))
owner_size<-owner_size%>%
mutate(max_units_by_owner = max(tot_units_owned_by_taxpayer_add,tot_units_owned_by_owner_name,tot_units_owned_by_taxpayer_nm),
max_props_by_owner = max(tot_props_owned_by_owner_name, tot_props_owned_by_taxpayer_add, tot_props_owned_by_taxpayer_nm))%>%
select(pid,
tax_address_full,
owner_nm,
taxpayer_nm,
licensed_units,
)
owner_size<-owner_size_save
owner_size<-owner_size%>%
mutate(max_units_by_owner = max(tot_units_owned_by_taxpayer_add,tot_units_owned_by_owner_name,tot_units_owned_by_taxpayer_nm),
max_props_by_owner = max(tot_props_owned_by_owner_name, tot_props_owned_by_taxpayer_add, tot_props_owned_by_taxpayer_nm))%>%
select(pid,
tax_address_full,
owner_nm,
taxpayer_nm,
licensed_units,
max_units_by_owner,
max_props_by_owner
)
owner_size<-owner_size_save
owner_size<-owner_size%>%
mutate(max_units_by_owner = max(tot_units_owned_by_taxpayer_add,tot_units_owned_by_owner_name,tot_units_owned_by_taxpayer_nm),
max_props_by_owner = max(tot_props_owned_by_owner_name, tot_props_owned_by_taxpayer_add, tot_props_owned_by_taxpayer_nm))%>%
select(pid,
max_units_by_owner,
max_props_by_owner
)
owner_size<-owner_size_save
owner_size<-owner_size%>%
mutate(max_units_by_owner = max(tot_units_owned_by_taxpayer_add,tot_units_owned_by_owner_name,tot_units_owned_by_taxpayer_nm),
max_props_by_owner = max(tot_props_owned_by_owner_name, tot_props_owned_by_taxpayer_add, tot_props_owned_by_taxpayer_nm))%>%
select(pid,
max_units_by_owner,
max_props_by_owner
)
#there are some points that won't join so we'll add them on to the data set
owner_size<-mpls_rentals_henn_parcels%>%
dplyr::select(pid,tax_address_full,owner_nm,taxpayer_nm,licensed_units)%>%
mutate(units = ifelse(is.na(licensed_units),1,licensed_units))
owner_size<-owner_size%>%
mutate(tax_address_full = ifelse(is.na(tax_address_full)|tax_address_full=="","no tax add",tax_address_full),
owner_nm = ifelse(is.na(owner_nm)|owner_nm=="", "no owner name", owner_nm),
taxpayer_nm = ifelse(is.na(taxpayer_nm)|taxpayer_nm =="", "no tax name", taxpayer_nm))%>%
group_by(tax_address_full)%>%
mutate(tot_props_owned_by_taxpayer_add = sum(n()))%>%
group_by(tax_address_full)%>%
mutate(tot_units_owned_by_taxpayer_add = sum(units))%>%
group_by(owner_nm)%>%
mutate(tot_props_owned_by_owner_name = sum(n()),
tot_units_owned_by_owner_name = sum(units))%>%
group_by(taxpayer_nm)%>%
mutate(tot_props_owned_by_taxpayer_nm = sum(n()),
tot_units_owned_by_taxpayer_nm = sum(units))
owner_size_save<-owner_size
owner_size<-owner_size_save
owner_size<-owner_size%>%
mutate(max_units_by_owner = max(tot_units_owned_by_taxpayer_add,tot_units_owned_by_owner_name,tot_units_owned_by_taxpayer_nm),
max_props_by_owner = max(tot_props_owned_by_owner_name, tot_props_owned_by_taxpayer_add, tot_props_owned_by_taxpayer_nm))%>%
select(pid,
max_units_by_owner,
max_props_by_owner
)
#now we join this back onto the points data set
mpls_rentals_henn_parcels<-mpls_rentals_henn_parcels%>%
left_join(owner_size, by = c("pid"="pid"))
mpls_rentals<-mpls_rentals_henn_parcels%>%
filter(!is.na(objectid))
View(mpls_rentals)
#create data frame that just has the object IDs of the licensed rentals from mpls and do a filtering join
mpls_rental_id<-mpls_rental_owner%>%
select(apn)
mpls_rentals<-mpls_rentals%>%
semi_join(mpls_rental_id)
mpls_rentals<-mpls_rentals%>%
semi_join(mpls_rental_id, by = c("pid" = "apn"))
#create data frame that just has the object IDs of the licensed rentals from mpls and do a filtering join
mpls_rentals<-unique(mpls_rentals)
View(mpls_rentals)
##what are the demographics of the areas they live in
acs_19_vars <- load_variables(2019, "acs5", cache = TRUE)
my_vars<- c(pop = "B01003_001",
pov_total = "B17001_001",
in_pov = "B17001_002",
med_hh_inc="B19013_001",
white_alone = "B03002_003",
latino = "B03003_003",
black = "B03002_004",
asian = "B03002_006",
native="B03002_005",
api="B03002_007",
occ_status="B25002_001",
vacant="B25002_003",
med_year_built="B25035_001",
total_tenure="B25003_001",
owners="B25003_002",
renters="B25003_003")
MN_demos <- get_acs(geography = "tract", variables = my_vars,
state="MN",geometry = TRUE) %>%
select(-moe) %>%
spread(variable, estimate) %>%
filter(pop!=0) %>%
mutate(pct_renter = (renters/total_tenure),
pct_owner = (owners/total_tenure),
pct_pov=(in_pov/pov_total),
pov_rate = (in_pov/pov_total),
pct_not_white = ((pop-white_alone)/pop),
pct_white = (white_alone/pop),
pct_latino = (latino/pop),
pct_black = (black/pop),
pct_asian = (asian/pop)) %>%
st_transform(2272)
MN_demos <- get_acs(geography = "tract", variables = my_vars,
state="MN",geometry = TRUE) %>%
select(-moe) %>%
spread(variable, estimate) %>%
filter(pop!=0) %>%
mutate(pct_renter = (renters/total_tenure),
pct_owner = (owners/total_tenure),
pct_pov=(in_pov/pov_total),
pov_rate = (in_pov/pov_total),
pct_not_white = ((pop-white_alone)/pop),
pct_white = (white_alone/pop),
pct_latino = (latino/pop),
pct_black = (black/pop),
pct_asian = (asian/pop)) %>%
st_transform(26792)
View(mpls_rentals)
View(MN_demos)
View(mpls_rentals)
mpls_tract_demos <- mpls_demos %>%
filter(grepl('Hennepin', NAME)) %>%
mutate(
#40+ % pov and over 50% not white
RCAP = ifelse(pct_pov > .4 & pct_not_white > .5, 1,0),
###Over 80% white and over 2x national median inc, which is 69560
RCAA = ifelse(pct_not_white <= .2 & med_hh_inc >=139120, 1, 0)
)
mpls_tract_demos <- MN_demos %>%
filter(grepl('Hennepin', NAME)) %>%
mutate(
#40+ % pov and over 50% not white
RCAP = ifelse(pct_pov > .4 & pct_not_white > .5, 1,0),
###Over 80% white and over 2x national median inc, which is 69560
RCAA = ifelse(pct_not_white <= .2 & med_hh_inc >=139120, 1, 0)
)
View(mpls_tract_demos)
View(mpls_rentals)
names(mpls_rentals)
mpls_rentals<-mpls_rentals%>%
select(pid,
zip_cd,
munic_nm,
use1_desc,
address_full,
tax_address_full,
tax_lat,
tax_long,
tax_zip,
x,
y,
owner_state,
owner_geo,
owner_type,
max_units_by_owner,
max_props_by_owner,
licensed_units,
owner_name)
mpls_rentals_sf <- st_as_sf(mpls_rentals, coords = c("x", "y"),crs = 4326, agr = "constant")%>%
st_transform(crs = 26792)
mpls_rentals_sf <- st_as_sf(mpls_rentals, coords = c("x", "y"),crs = 4326, agr = "constant")%>%
st_transform(crs = 26792)
mpls_owners_sf <- st_as_sf(mpls_rentals, coords = c("tax_long", "tax_lat"),crs = 4326, agr = "constant")%>%
st_transform(crs = 26792)
#spatial join the rentals to the tract demographics
rentals_demos <- mpls_rentals_sf %>%
st_transform(26792) %>%
st_join(henn_tract_demos, join=st_intersects)
henn_tract_demos <- MN_demos %>%
filter(grepl('Hennepin', NAME)) %>%
mutate(
#40+ % pov and over 50% not white
RCAP = ifelse(pct_pov > .4 & pct_not_white > .5, 1,0),
###Over 80% white and over 2x national median inc, which is 69560
RCAA = ifelse(pct_not_white <= .2 & med_hh_inc >=139120, 1, 0)
)
#spatial join the rentals to the tract demographics
rentals_demos <- mpls_rentals_sf %>%
st_transform(26792) %>%
st_join(henn_tract_demos, join=st_intersects)
#spatial join the rentals to the tract demographics
rentals_demos <- mpls_rentals_sf %>%
st_transform(26792) %>%
st_join(henn_tract_demos, join=st_intersects)
# spatial join the landlords to the tract
landlords_demos <- mpls_owners_sf %>%
st_transform(26792) %>%
st_join(henn_tract_demos, join=st_intersects)
#map it!
rcaa_map<-henn_tract_demos%>%
ggplot()+
geom_sf(mapping = aes(fill = rcaa, group = henn_tract_demos), colour = "#f5f5f5", size = .5) +
labs(x = NULL,
y = NULL,
title = "OSA Survey Respondents by Neighborhood",
caption = "Urban Institute") +
theme(axis.text = element_blank(),
axis.line = element_blank(),
axis.ticks = element_blank(),
panel.grid.major = element_blank(),
legend.position = "right",
legend.direction = "vertical",
legend.title = element_text("Survey Responses", face = "bold", size = 11),
strip.text = element_text(size = 11),
plot.caption = element_text(size = 11),
strip.background = element_rect(fill = "#ffffff"))
rcaa_map
#map it!
rcaa_map<-henn_tract_demos%>%
ggplot()+
geom_sf(mapping = aes(fill = rcaa, group = henn_tract_demos), colour = "#f5f5f5", size = .5) +
labs(x = NULL,
y = NULL,
title = "OSA Survey Respondents by Neighborhood",
caption = "Urban Institute") +
theme(axis.text = element_blank(),
axis.line = element_blank(),
axis.ticks = element_blank(),
panel.grid.major = element_blank(),
legend.position = "right",
legend.direction = "vertical",
legend.title = element_text("Survey Responses", face = "bold", size = 11),
strip.text = element_text(size = 11),
plot.caption = element_text(size = 11),
strip.background = element_rect(fill = "#ffffff"))
rcaa_map
#map it!
rcaa_map<-henn_tract_demos%>%
ggplot()+
geom_sf(mapping = aes(fill = rcaa, group = henn_tract_demos), colour = "#f5f5f5", size = .5)
rcaa_map
#map it!
rcaa_map<-henn_tract_demos %>%
ggplot() +
geom_sf(mapping = aes(fill = factor(RCAA))) +
scale_fill_discrete() +
labs(fill = "RCAA")
rcaa_map
henn_tract_demos <- MN_demos %>%
filter(grepl('Hennepin', NAME)) %>%
mutate(
#40+ % pov and over 50% not white
RCAP = ifelse(pct_pov > .4 & pct_not_white > .5, 1,0),
###Over 80% white and over 2x national median inc, which is 65889
RCAA = ifelse(pct_not_white <= .2 & med_hh_inc >=131778, 1, 0)
)
#map it!
rcaa_map<-henn_tract_demos %>%
ggplot() +
geom_sf(mapping = aes(fill = factor(RCAA))) +
scale_fill_discrete() +
labs(fill = "RCAA")
#spatial join the rentals to the tract demographics
rentals_demos <- mpls_rentals_sf %>%
st_transform(26792) %>%
st_join(henn_tract_demos, join=st_intersects)
# spatial join the landlords to the tract
landlords_demos <- mpls_owners_sf %>%
st_transform(26792) %>%
st_join(henn_tract_demos, join=st_intersects)
sum(mpls_rentals$licensed_units)
View(mpls_rentals)
mpls_rentals<-mpls_rentals_henn_parcels%>%
filter(!is.na(objectid))
#create data frame that just has the object IDs of the licensed rentals from mpls and do a filtering join
mpls_rentals<-unique(mpls_rentals)
View(mpls_rentals_sf)
View(mpls_rental_owner)
View(mpls_owners_sf)
View(landlords_demos)
table(landlord_demos$RCAP)
table(landlords_demos$RCAP)
16604+840
#there are 17444 owners that are in hennepin county, meaning there are
landlords_in_henn<-landlords_demos%>%
filter(!is.na(RCAP))
#there are 17444 owners that are in hennepin county, meaning there are
landlords_in_henn<-landlords_demos%>%
filter(!is.na(RCAP))
``
sum(landlords_in_henn$licensed_units)
#there are 17444 owners that are in hennepin county, meaning there are
landlords_in_henn<-landlords_demos%>%
filter(!is.na(RCAP))%>%
group_by(tax_address_full)%>%
summarise(count = n())
landlords_in_henn<-landlords_demos%>%
filter(!is.na(RCAP))%>%
select(tax_address_full)
landlords_in_henn<-unique(landlords_in_henn)
View(landlords_in_henn)
View(landlords_demos)
summarise(landlords_demos$max_props_by_owner)
boxplot(landlords_demos$max_props_by_owner)
boxplot(landlords_demos$max_props_by_owner)
boxplot(landlords_demos$max_props_by_owner)
ggplot(landlords_demos, aes(x=max_props_by_owner)) +
geom_histogram(aes(y=..density..),      # Histogram with density instead of count on y-axis
binwidth=.5,
colour="black", fill="white") +
geom_density(alpha=.2, fill="#FF6666")  # Overlay with transparent density plot
properties_dist<-landlords_demos$max_props_by_owner
quantiles(properties_dist)
quantile(properties_dist)
mom_and_pop<-landlords_demos%>%
filter(!is.na(RCAP)&
(max_units_by_owner<10))
mom_and_pop<-unique(mom_and_pop)
mom_and_pop<-landlords_demos%>%
filter(!is.na(RCAP)&
(max_units_by_owner<10))%>%
select(tax_address_full)
mom_and_pop<-unique(mom_and_pop)
landlords_count<-unique(landlords_count)
#overall landlord count
landlords_count<-landlords_demos%>%
select(tax_address_full)
landlords_count<-unique(landlords_count)
#there are 11131 unique landlords in hennepin county
landlords_in_henn<-landlords_demos%>%
filter(!is.na(RCAP))
sum(landlords_in_henn$licensed_units)
mom_and_pop<-landlords_demos%>%
filter(!is.na(RCAP)&
(max_units_by_owner<10))
sum(mom_and_pop$licensed_units)
table(landlords_demos$owner_type)
LLC_owners<-landlords_demos%>%
filter(owner_type=="corpllc")
sum(LLC_owners$licensed_units)
LLC_owners<-landlords_demos%>%
filter(owner_type=="corpllc")
%>%
LLC_owners<-landlords_demos%>%
filter(owner_type=="corpllc")
%>%
LLC_owners<-landlords_demos%>%
filter(owner_type=="corpllc")%>%
select(taxpayer_address_full)
LLC_owners<-landlords_demos%>%
filter(owner_type=="corpllc")%>%
select(tax_address_full)
LLC_owners<-unique(LLC_owners)
#mom and pop is if they live in the county and have fewer than 10 units
mom_and_pop<-landlords_demos%>%
filter(!is.na(RCAP)&
(max_units_by_owner<=3))
sum(mom_and_pop$licensed_units)
#mom and pop is if they live in the county and have fewer than 10 units
mom_and_pop<-landlords_demos%>%
filter(!is.na(RCAP)&
(max_units_by_owner<=3))%>%
select(tax_address_full)
mom_and_pop<-unique(mom_and_pop)
landlords_demos<-landlords_demos%>%
rename(rcaa_ll = RCAA,
rcap_ll = RCAP)
rentals_demos<-rentals_demos%>%
rename(rcaa_rental = RCAA,
rcap_rental = RCAP)
#overall mpls RCAA/RCAP makeup
landlords_demos<-landlords_demos%>%
rename(rcaa_ll = RCAA,
rcap_ll = RCAP)
landlords_demos<-landlords_demos%>%
rename(rcaa_ll = RCAA,
rcap_ll = RCAP)
View(landlords_demos)
mpls_rcaa_rcap<-mpls_rentals%>%
left_join(landlords_demos, by = c("pid" = "pid"))%>%
left_join(rentals_demos, by = c("pid" = "pid"))
#overall mpls RCAA/RCAP makeup
landlords_rcaaps<-landlords_demos%>%
rename(rcaa_ll = RCAA,
rcap_ll = RCAP)%>%
select(pid,
rcaa_ll,
rcap_ll)
landlords_rcaaps<-landlords_demos%>%
select(pid,
rcaa_ll,
rcap_ll)
rentals_rcaaps<-rentals_demos%>%
select(rcaa_rental,
rcap_rental,
pid)
#overall mpls RCAA/RCAP makeup
landlords_rcaaps<-landlords_demos%>%
rename(rcaa_ll = RCAA,
rcap_ll = RCAP)%>%
select(pid,
rcaa_ll,
rcap_ll)
landlords_rcaaps<-unique(landlords_rcaaps)
landlords_rcaaps<-unique(landlords_rcaaps)
entals_rcaaps<-unique(rentals_rcaaps)
rentals_rcaaps<-unique(rentals_rcaaps)
mpls_rcaa_rcap<-mpls_rentals%>%
select(pid,
tax_address_full,
licensed_units,
max_units_by_owner,
max_props_by_owner)%>%
left_join(landlords_rcaaps, by = c("pid" = "pid"))%>%
left_join(rentals_rcaaps, by = c("pid" = "pid"))
View(mpls_rcaa_rcap)
View(mpls_rcaa_rcap)
mpls_rcaa_rcap<-mpls_rcaa_rcap%>%
